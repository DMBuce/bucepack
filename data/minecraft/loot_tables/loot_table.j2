{
  "type": "minecraft:{{ type if type is defined else "chest" }}",
  "pools": [
    {%- for pool in pools %}
    {
      {%- if pool.rolls is mapping %}
      "rolls": {
        "min": {{pool.rolls.min}}.0,
        "max": {{pool.rolls.max}}.0,
        "type": "minecraft:uniform"
      },
      {%- else %}
      "rolls": {{pool.rolls}},
      {%- endif %}
      "entries": [
        {%- for entry in pool.entries %}
        {%- if entry.type == "item" %}
        {
          "type": "minecraft:item",
          {%- if entry.weight != 1 %}
          "weight": {{entry.weight}},
          {%- endif %}
          {%- if entry.min is defined 
              or entry.damage is defined
              or entry.count is defined
              or entry.enchant_lvl is defined
              or entry.enchant_rand is defined
              or entry.looting is defined
          %}
          "functions": [
            {%- if entry.min is defined %}
            {
              "function": "minecraft:set_count",
              "count": {
                "min": {{entry.min}}.0,
                "max": {{entry.max}}.0,
                "type": "minecraft:uniform"
              }
            }{{ "," if entry.damage is defined or entry.count is defined or entry.enchant_lvl is defined or entry.enchant_rand is defined or entry.looting is defined }}
            {%- endif %}
            {%- if entry.damage is defined %}
            {
              "function": "minecraft:set_damage",
              "damage": {
                "min": {{entry.damage.min}},
                "max": {{entry.damage.max}}
              }
            }{{ "," if entry.count is defined or entry.enchant_lvl is defined or entry.enchant_rand is defined or entry.looting is defined }}
            {%- endif %}
            {%- if entry.count is defined %}
            {
              "function": "minecraft:set_count",
              "count": {{entry.count}}
            }{{ "," if entry.enchant_lvl is defined or entry.enchant_rand is defined or entry.looting is defined }}
            {%- endif %}
            {%- if entry.enchant_lvl is defined %}
            {
              "function": "minecraft:enchant_with_levels",
              "levels": {{entry.enchant_lvl}},
              "treasure": true
            }{{ "," if entry.enchant_rand is defined or entry.looting is defined }}
            {%- endif %}
            {%- if entry.enchant_rand is defined %}
            {
              "function": "minecraft:enchant_randomly"
              {%- if entry.enchant_rand | length > 0 %},
              "enchantments": [
              {%- for enchant in entry.enchant_rand %}
                "minecraft:{{enchant}}"{{ "," if not loop.last }}
              {%- endfor %}
              ]
              {%- endif %}
            }{{ "," if entry.looting is defined }}
            {%- endif %}
            {%- if entry.looting is defined %}
            {
              "function": "minecraft:looting_enchant",
              "count": {
                "min": {{entry.looting.min}},
                "max": {{entry.looting.max}}
              }
            }
            {%- endif %}
          ],
          {%- endif %}
          "name": "minecraft:{{entry.item}}"
        }{{ "," if not loop.last }}
        {%- elif entry.type == "tag" %}
        {
          "type": "minecraft:tag",
          "name": "minecraft:{{entry.name}}",
          "expand": {{ entry.expand | lower }}
        }{{ "," if not loop.last }}
        {%- elif entry.type == "loot_table" %}
        {
          "type": "minecraft:loot_table",
          {%- if entry.weight != 1 %}
          "weight": {{entry.weight}},
          {%- endif %}
          "quality": {{ entry.quality if entry.quality is defined else 0 }},
          "name": "minecraft:{{entry.table}}"
        }{{ "," if not loop.last }}
        {%- elif entry.type == "empty" %}
        {
          "type": "minecraft:empty",
          {%- if entry.weight != 1 %}
          "weight": {{entry.weight}}
          {%- endif %}
        }{{ "," if not loop.last }}
        {%- elif entry.type == "potion" %}
        {
          "type": "minecraft:item",
          {%- if entry.weight != 1 %}
          "weight": {{entry.weight}},
          {%- endif %}
          "functions": [
            {
              "function": "minecraft:set_nbt",
              "tag": "{Potion:\"minecraft:{{entry.effect}}\"}"
            }
          ],
          "name": "minecraft:{{ entry.item if entry.item is defined else "potion" }}"
        }{{ "," if not loop.last }}
        {%- elif entry.type == "magicbook_random" %}
        {
          "type": "minecraft:item",
          {%- if entry.weight != 1 %}
          "weight": {{entry.weight}},
          {%- endif %}
          "functions": [
            {
              "function": "minecraft:enchant_randomly"
              {%- if entry.enchants is defined %},
              "enchantments": [
                {%- for enchant in entry.enchants %}
                "minecraft:{{enchant}}"{{ "," if not loop.last }}
                {%- endfor %}
              ]
              {%- endif %}
            }
          ],
          "name": "minecraft:book"
        }{{ "," if not loop.last }}
        {%- elif entry.type == "magicbook_lvl" %}
        {
          "type": "minecraft:item",
          {%- if entry.weight != 1 %}
          "weight": {{entry.weight}},
          {%- endif %}
          "functions": [
            {
              "function": "minecraft:enchant_with_levels",
              "levels": {{entry.level}},
              "treasure": true
            }
          ],
          "name": "minecraft:book"
        }{{ "," if not loop.last }}
        {%- elif entry.type == "explorer_map" %}
        {
          "type": "minecraft:item",
          {%- if entry.weight != 1 %}
          "weight": {{entry.weight}},
          {%- endif %}
          "functions": [
            {
              "function": "minecraft:exploration_map",
              {%- if entry.structure is defined %}
              "destination": "{{entry.structure}}",
              {%- endif %}
              "decoration": "{{entry.decor}}",
              "zoom": 1,
              "skip_existing_chunks": {{ entry.skipchunks | lower }}
            }
            {%- if entry.display is defined %},
            {
              "function": "minecraft:set_name",
              "name": "{{entry.display}}"
            }
            {%- endif %}
          ],
          "name": "minecraft:map"
        }{{ "," if not loop.last }}
        {%- elif entry.type == "suspicious_stew" %}
        {
          "type": "minecraft:item",
          {%- if entry.weight != 1 %}
          "weight": {{entry.weight}},
          {%- endif %}
          "functions": [
            {
              "function": "minecraft:set_stew_effect",
              "effects": [
                {%- for effect in entry.effects %}
                {
                  "type": "minecraft:{{effect.name}}",
                  "duration": {
                    "min": {{effect.min}}.0,
                    "max": {{effect.max}}.0
                  }
                }{{ "," if not loop.last }}
                {%- endfor %}
              ]
            }
          ],
          "name": "minecraft:suspicious_stew"
        }{{ "," if not loop.last }}
        {%- elif entry.type == "item_biome" %}
        {
          "type": "minecraft:item",
          {%- if entry.min is defined %}
          "functions": [
            {
              "function": "minecraft:set_count",
              "count": {
                "min": {{entry.min}}.0,
                "max": {{entry.max}}.0,
                "type": "minecraft:uniform"
              }
            }
          ],
          {%- endif %}
          "conditions": [
            {
              "condition": "minecraft:alternative",
              "terms": [
                {%- for biome in entry.biomes %}
                {
                  "condition": "minecraft:location_check",
                  "predicate": {
                    "biome": "minecraft:{{biome}}"
                  }
                }{{ "," if not loop.last }}
                {%- endfor %}
              ]
            }
          ],
          {%- if entry.weight != 1 %}
          "weight": {{entry.weight}},
          {%- endif %}
          "name": "minecraft:{{entry.item}}"
        }{{ "," if not loop.last }}
        {%- elif entry.type == "item_unused" %}
        {
          "type": "minecraft:item",
          "name": "minecraft:{{entry.item}}",
          {%- if entry.weight != 1 %}
          "weight": {{entry.weight}},
          {%- endif %}
          "functions": [
            {
              "function": "minecraft:set_count",
              "count": {
                "min": {{entry.min}}.0,
                "max": {{entry.max}}.0,
                "type": "minecraft:uniform"
              }
            }
          ],
          "conditions": [
            {
              "condition": "minecraft:entity_properties",
              "entity": "this",
              "predicate": {
                "player": {
                  "stats": [
                    {
                      "type": "minecraft:used",
                      "stat": "minecraft:{{entry.item}}",
                      "value": { "max": 0 }
                    }
                  ]
                }
              }
            }
          ]
        }{{ "," if not loop.last }}
        {%- endif %}
        {%- endfor %}
      ]{{ "," if pool.conditions is defined }}
      {%- if pool.conditions is defined %}
      "conditions": [
        {%- for condition in pool.conditions %}
        {%- if condition.condition == "skeleton_is_killer" %}
        {
          "condition": "minecraft:entity_properties",
          "predicate": {
            "type": "#minecraft:skeletons"
          },
          "entity": "killer"
        }{{ "," if not loop.last }}
        {%- endif %}
        {%- endfor %}
      ]
      {%- endif %}
    }{{ "," if not loop.last }}
    {%- endfor %}
  ]
}
{#- vim: set ft=j2: #}
